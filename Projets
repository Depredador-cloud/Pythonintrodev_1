# Python Beginner Projects

This repository contains a series of beginner-friendly Python projects aimed at practicing basic programming concepts. Each project focuses on utilizing fundamental Python syntax and structures, such as conditionals, loops, and functions. These projects are perfect for beginners looking to apply their knowledge in practical scenarios.

## Project 1: Simple Calculator

- **Objective**: Create a simple calculator that can perform basic arithmetic operations.
- **Features**:
  - Accept user input for two numbers and an operator.
  - Support addition, subtraction, multiplication, and division.
- **Concepts to Practice**: Functions, `if`/`elif` statements, user input.

#Project #1
#Simple Calculator

def add(x, y):
    return x + y

def subtract(x, y):
    return x - y

def multiple(x, y):
    return x * y

def division(x, y):
    return x / y

print("Welcome to the state of the art calculator!\n")
print("What are doing?\n")
print("1. Addition")
print("2. Subtraction")
print("3. Multiplication")
print("4. Division")

operator = input("\nPick a number from the list above: ")

num_1 = input("\nPlese input the first number: ")
num_2 = input("Please input the second number: ")

if operator == '1':
    print(num_1, "+",num_2,"=", add(num_1,num_2))

elif operator == '2':
    print(num_1, "-",num_2,"=", add(num_1,num_2))

elif operator == '3':
    print(num_1, "*",num_2,"=", add(num_1,num_2))

elif operator == '4':
    print(num_1, "/",num_2,"=", add(num_1,num_2))

else:
    print("Something went wrong - make sure to use only numbers and symbols!")

## Project 2: Triangle Area Calculator

- **Objective**: Calculate the area of a triangle given the height and base.
- **Features**:
  - Prompt the user to input the base and height values.
  - Use the formula `area = 1/2 * base * height`.
- **Concepts to Practice**: User input, floating-point arithmetic.

## Project 3: Multiplication Table

- **Objective**: Generate a multiplication table for a number specified by the user.
- **Features**:
  - Accept a number from the user.
  - Display the multiplication table for that number up to 12.
- **Concepts to Practice**: Loops, user input.

## Project 4: Find the Largest Number

- **Objective**: Create a program to find the largest number from a user-given list.
- **Features**:
  - Accept multiple numbers from the user.
  - Identify and display the largest number.
- **Concepts to Practice**: `if` statements, comparison operators, user input.

## Project 5: Alphabetize Word List

- **Objective**: Alphabetize a list of words provided by the user.
- **Features**:
  - Accept a list of words from the user.
  - Sort and display the words in alphabetical order.
- **Concepts to Practice**: List sorting, user input.

## Project 6: Dice Rolling Simulator

- **Objective**: Simulate rolling a dice.
- **Features**:
  - Option to roll the dice multiple times.
  - Display each result.
- **Concepts to Practice**: Loops, `if`/`else` statements, randomness.

## Project 7: Random Word Selector

- **Objective**: Select a random word from a predefined list.
- **Features**:
  - Store a list of words in a text file or within the code.
  - Display a randomly selected word.
- **Concepts to Practice**: File I/O, randomness.

## Project 8: Rock, Paper, Scissors Game

- **Objective**: Create a Rock, Paper, Scissors game for two players.
- **Features**:
  - Accept choices (rock, paper, scissors) from two players.
  - Determine and display the winner.
- **Concepts to Practice**: User input, `if`/`elif` statements, game logic.
